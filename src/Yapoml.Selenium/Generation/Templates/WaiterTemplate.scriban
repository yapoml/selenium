{{- for component in $1.components }}
{{- if !component.is_plural }}

/// <summary>
/// Waits until <c>{{ component.name }}</c> is displayed.
/// </summary>
/// <param name="timeout">How long to wait until {{ component.name }} component is displayed.</param>
/// <param name="pollingInterval">Interval between verifications in a loop.</param>
/// <returns></returns>
public {{ get_component_return_type component }} Wait{{ component.name }}Displayed(System.TimeSpan? timeout = null, System.TimeSpan? pollingInterval = null)
{
	var byValue = "{{ component.by.value }}";

	{{ if component.by.method == 'XPath' -}}
	var by = OpenQA.Selenium.By.XPath(byValue);
	{{ end -}}

	{{ if component.by.method == 'Css' -}}
	var by = OpenQA.Selenium.By.CssSelector(byValue);
	{{ end -}}

	{{ if component.by.method == 'Id' -}}
	var by = OpenQA.Selenium.By.Id(byValue);
	{{ end -}}

	{{ if component.by.method == 'None' -}}
	{{ if is_xpath component.by.value }}
	var by = OpenQA.Selenium.By.XPath(byValue);
	{{ else }}
	var by = OpenQA.Selenium.By.CssSelector(byValue);
	{{ end -}}
	{{ end -}}

	var timeoutOptions = SpaceOptions.Services.Get<Yapoml.Selenium.Options.TimeoutOptions>();

	var element = Yapoml.Selenium.Services.Waiter.UntilDisplayed("{{ component.name }}", {{ $2 }}, by, timeout ?? timeoutOptions.Timeout, pollingInterval ?? timeoutOptions.PollingInterval);

	return SpaceOptions.Services.Get<Yapoml.Selenium.Services.Factory.IComponentFactory>().Create<{{get_component_return_type component}}>(WebDriver, element, SpaceOptions);
}
{{- end }}
{{- end }}